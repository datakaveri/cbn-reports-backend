// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id               Int      @id @default(autoincrement())
  transactionId    String   @unique
  transactionDate  DateTime
  amount           Float
  transactionFee   Float
  currencyCode     String
  entity           String
  merchantId       String
  status           String
}

model POSCashLimit {
  id                 Int      @id @default(autoincrement())
  posId              String   @unique
  businessLocation   String
  acquirerCode       String
  cumulativeValue    Float
  period             String   // "day" or "week"
}

model POSAggregate {
  id                Int      @id @default(autoincrement())
  cardNumber        String
  posId             String
  date              DateTime
  hour              Int
  volume            Float
  count             Int
  transactionType   String
}

model MerchantAgentInventory {
  id                 Int      @id @default(autoincrement())
  bankCode           String
  posId              String
  merchantAgentCode  String
  category           String
  location           String
}

model MerchantAgentDetails {
  id        Int      @id @default(autoincrement())
  bvn       String?   // Bank Verification Number
  bankCode  String   // Bank Code
  code      String   // Merchant or Agent Code
  category  String   // Category (e.g., Merchant or Agent)
  nin       String?  // National Identification Number (optional)
  tin       String?  // Tax Identification Number (optional)
}

model Cardholder {
  id        Int      @id @default(autoincrement())
  bvn       String  // Bank Verification Number (optional)
  bankCode  String   // Bank Code
  cardNumber String  // Card Number
}

model ISO8583TransactionLog {
  id             Int      @id @default(autoincrement())
  transactionId  String   @unique // Unique identifier for the transaction
  ISO8583Log     String   // Log data in ISO8583 format
}